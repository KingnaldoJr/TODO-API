plugins {
	id 'org.springframework.boot' version '2.6.2'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id 'jacoco'
	id 'org.sonarqube' version '3.3'
	id 'com.github.johnrengelman.processes' version '0.5.0'
	id 'org.springdoc.openapi-gradle-plugin' version '1.3.3'
}

group = 'dev.rmjr'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	// Core Dependencies
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'

	// Security
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'io.jsonwebtoken:jjwt:0.9.1'
	implementation 'org.bouncycastle:bcpkix-jdk15on:1.70'

	// Mail
	implementation 'org.springframework.boot:spring-boot-starter-mail'

	// Database
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.flywaydb:flyway-core'
	runtimeOnly 'mysql:mysql-connector-java:8.0.27'

	// Lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	// MapStruct
	implementation 'org.mapstruct:mapstruct:1.4.2.Final'
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.4.2.Final'

	// Swagger
	implementation 'org.springdoc:springdoc-openapi-ui:1.6.4'
	implementation 'org.springdoc:springdoc-openapi-security:1.6.4'

	// Test
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.mockito', module: 'mockito-core'
	}
	testImplementation 'org.mockito:mockito-inline:4.0.0'
	testImplementation 'io.rest-assured:rest-assured:4.4.0'
	testImplementation 'io.rest-assured:spring-mock-mvc:4.4.0'
}

jacoco.toolVersion = "0.8.7"

jacocoTestReport {
	reports {
		xml.enabled true
		xml.destination file("${buildDir}/jacoco-xml/jacoco.xml")
		html.destination file("${buildDir}/jacoco-html")
	}
}

test {
	useJUnitPlatform()
}

tasks.withType(Test) {
	finalizedBy('jacocoTestReport')
}

tasks.withType(Test) {
	useJUnitPlatform()
}

sonarqube {
	properties {
		property 'sonar.projectKey', 'KingnaldoJr_TODO-List-API'
		property 'sonar.organization', 'kingnaldojr'
		property 'sonar.host.url', 'https://sonarcloud.io'
		property 'sonar.coverage.jacoco.xmlReportPaths', "${buildDir}/jacoco-xml/jacoco.xml"
		property 'sonar.cpd.exclusions', 'src/main/java/dev/rmjr/todo/request/**,src/main/java/dev/rmjr/todo/response/**'
		property 'sonar.coverage.exclusions', 'src/main/java/dev/rmjr/todo/config/**'
	}
}